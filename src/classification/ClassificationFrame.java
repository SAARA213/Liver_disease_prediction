/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package classification;

import java.awt.BorderLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Random;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

import weka.core.Instances;
import weka.classifiers.bayes.NaiveBayes;
import weka.classifiers.trees.J48;
import weka.classifiers.Evaluation;
import weka.gui.treevisualizer.PlaceNode2;
import weka.gui.treevisualizer.TreeVisualizer;
/**
 *
 * @author admin
 */
public class ClassificationFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClassificationFrame
     */
    Details dt=new Details();
    
    public ClassificationFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 30)); // NOI18N
        jLabel1.setText("Classification");

        jTable1.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Algorithm", "Precision", "Recall", "F-Measure", "Accuracy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jScrollPane2.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton1.setText("Apply");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton2.setText("Graph");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(jButton2)))
                .addContainerGap(368, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(49, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 310, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(83, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String ar="@relation dd\n";
            for(int i=0;i<dt.colTypes.length;i++)
            {
                if(dt.colTypes[i].equals("con"))
                    ar=ar+"@attribute "+dt.colNames[i].trim()+" numeric\n";
                else
                {
                    ar=ar+"@attribute "+dt.colNames[i].trim()+" ";
                    ArrayList at=new ArrayList();
                    for(int j=0;j<dt.datas.length;j++)
                    {
                       if(!at.contains(String.valueOf(dt.datas[j][i]).trim()))
                           at.add(String.valueOf(dt.datas[j][i]).trim());
                    }
                    String a1=at.toString();
                    a1=a1.replace("[", "{");
                    a1=a1.replace("]", "}");
                    ar=ar+a1+"\n";
                }
            }
            
            ar=ar+"@data\n";
            for(int i=0;i<dt.datas.length;i++)
            {
                for(int j=0;j<dt.datas[0].length;j++)
                {
                    ar=ar+dt.datas[i][j]+",";
                }
                ar=ar.substring(0, ar.lastIndexOf(","));
                ar=ar+"\n";
            }
            
            ar=ar.trim();
            
            File fe=new File("data.arff");
            FileOutputStream fos=new FileOutputStream(fe);
            fos.write(ar.trim().getBytes());
            fos.close();
            
            Instances indata1 = new Instances(new BufferedReader(new FileReader("data.arff")));
            
            DefaultTableModel dm=(DefaultTableModel)jTable1.getModel();
            String nb1=NBCls(indata1);
            String g1[]=nb1.split("#");
            Vector v1=new Vector();
            v1.add("Naive Bayes");
            v1.add(g1[1]);
            v1.add(g1[2]);
            v1.add(g1[3]);
            v1.add(g1[0]);
            dm.addRow(v1);
             
            String ds1=DSCls(indata1);
            
            
            String g2[]=ds1.split("#");
            Vector v2=new Vector();
            v2.add("C4.5");
            v2.add(g2[1]);
            v2.add(g2[2]);
            v2.add(g2[3]);
            v2.add(g2[0]);
            dm.addRow(v2);
             
             
            jButton2.setEnabled(true);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            DefaultTableModel dm=(DefaultTableModel)jTable1.getModel();
            int row=dm.getRowCount();
            
            String alg="";
            String pre="";
            String rec="";
            String fmes="";
            String acc="";
            String v1="";
            for(int i=0;i<row;i++)
            {
                alg=alg+dm.getValueAt(i, 0).toString()+"#";
                pre=pre+dm.getValueAt(i, 1).toString()+"#";
                rec=rec+dm.getValueAt(i, 2).toString()+"#";
                fmes=fmes+dm.getValueAt(i, 3).toString()+"#";
                acc=acc+dm.getValueAt(i, 4).toString()+"#";
                v1=v1+dm.getValueAt(i, 1).toString()+"#"+dm.getValueAt(i, 2).toString()+"#"+dm.getValueAt(i, 3).toString()+"@";
            }
            
            Graph1 gr=new Graph1();
            /*gr.display(alg, pre, "Precision");
            gr.display(alg, rec, "Recall");
            gr.display(alg, fmes, "F-Measure");*/
            gr.display(alg, acc, "Accuracy");
            gr.display2(alg, v1, "Precision, Recall, F-Measure");
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    DecimalFormat df=new DecimalFormat("#.###");
    
    public String NBCls(Instances data)
    {
        String res="";
        try
        {
            data.setClassIndex(data.numAttributes() - 1);
            NaiveBayes nb=new NaiveBayes();
            nb.buildClassifier(data);
            
            Random rand1 = new Random(1);  // using seed = 1
            int folds = 10;
            
            Evaluation eval2 = new Evaluation(data);                       
            eval2.crossValidateModel(nb, data, folds, rand1);
 
            double pre=eval2.weightedPrecision();
            double rec=eval2.weightedRecall();
            double fmes=eval2.weightedFMeasure();
            
            double cr2=eval2.correct();
            double ncr2=eval2.incorrect();
            
            double acc2=(double)cr2/(double)(ncr2+cr2);
            acc2=acc2*100;
            
            res=df.format(acc2)+"#"+df.format(pre)+"#"+df.format(rec)+"#"+df.format(fmes);
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
                    
        return res;
    }
    
    public String DSCls(Instances data)
    {
        String res="";
        try
        {
            data.setClassIndex(data.numAttributes() - 1);
            J48 tree=new J48();
            tree.buildClassifier(data);
            
             final javax.swing.JFrame jf = new javax.swing.JFrame("Decision Tree ");
            jf.setSize(500,400);
            jf.getContentPane().setLayout(new BorderLayout());
            TreeVisualizer tv = new TreeVisualizer(null,tree.graph(), new PlaceNode2());
            jf.getContentPane().add(tv, BorderLayout.CENTER);
            jf.addWindowListener(new java.awt.event.WindowAdapter() 
            {
                public void windowClosing(java.awt.event.WindowEvent e) 
                {
                    jf.dispose();
                }
            });

            jf.setVisible(true);
            tv.fitToScreen();
            
            Evaluation eval1 = new Evaluation(data);
                       
            Random rand1 = new Random(1);  // using seed = 1
            int folds = 10;
            eval1.crossValidateModel(tree, data, folds, rand1);
            
            double pre=eval1.weightedPrecision();
            double rec=eval1.weightedRecall();
            double fmes=eval1.weightedFMeasure();
                
            double cr1=eval1.correct();
            double ncr1=eval1.incorrect();
            
            double acc1=(double)cr1/(double)(ncr1+cr1);
            acc1=acc1*100;
            res=df.format(acc1)+"#"+df.format(pre)+"#"+df.format(rec)+"#"+df.format(fmes);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        return res;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassificationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassificationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
